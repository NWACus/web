/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    media: Media;
    pages: Page;
    posts: Post;
    users: User;
    tenants: Tenant;
    roles: Role;
    roleAssignments: RoleAssignment;
    globalRoles: GlobalRole;
    globalRoleAssignments: GlobalRoleAssignment;
    navigations: Navigation;
    biographies: Biography;
    teams: Team;
    settings: Setting;
    tags: Tag;
    homePages: HomePage;
    redirects: Redirect;
    forms: Form;
    'form-submissions': FormSubmission;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {
    users: {
      roles: 'roleAssignments';
      globalRoleAssignments: 'globalRoleAssignments';
    };
  };
  collectionsSelect: {
    media: MediaSelect<false> | MediaSelect<true>;
    pages: PagesSelect<false> | PagesSelect<true>;
    posts: PostsSelect<false> | PostsSelect<true>;
    users: UsersSelect<false> | UsersSelect<true>;
    tenants: TenantsSelect<false> | TenantsSelect<true>;
    roles: RolesSelect<false> | RolesSelect<true>;
    roleAssignments: RoleAssignmentsSelect<false> | RoleAssignmentsSelect<true>;
    globalRoles: GlobalRolesSelect<false> | GlobalRolesSelect<true>;
    globalRoleAssignments: GlobalRoleAssignmentsSelect<false> | GlobalRoleAssignmentsSelect<true>;
    navigations: NavigationsSelect<false> | NavigationsSelect<true>;
    biographies: BiographiesSelect<false> | BiographiesSelect<true>;
    teams: TeamsSelect<false> | TeamsSelect<true>;
    settings: SettingsSelect<false> | SettingsSelect<true>;
    tags: TagsSelect<false> | TagsSelect<true>;
    homePages: HomePagesSelect<false> | HomePagesSelect<true>;
    redirects: RedirectsSelect<false> | RedirectsSelect<true>;
    forms: FormsSelect<false> | FormsSelect<true>;
    'form-submissions': FormSubmissionsSelect<false> | FormSubmissionsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {
    nacWidgetsConfig: NacWidgetsConfig;
    diagnostics: Diagnostic;
  };
  globalsSelect: {
    nacWidgetsConfig: NacWidgetsConfigSelect<false> | NacWidgetsConfigSelect<true>;
    diagnostics: DiagnosticsSelect<false> | DiagnosticsSelect<true>;
  };
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  tenant: number | Tenant;
  alt: string;
  caption?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  contentHash?: string | null;
  blurDataUrl?: string | null;
  prefix?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    square?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    small?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    medium?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    large?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    xlarge?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    og?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tenants".
 */
export interface Tenant {
  id: number;
  name: string;
  customDomain?: string | null;
  /**
   * Used for subdomains and url paths for previews. This is a unique identifier for a tenant.
   */
  slug: string;
  contentHash?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: number;
  title: string;
  layout: (
    | BiographyBlock
    | ContentBlock
    | ContentWithCalloutBlock
    | FormBlock
    | ImageLinkGrid
    | ImageQuote
    | ImageText
    | ImageTextList
    | LinkPreviewBlock
    | MediaBlock
    | TeamBlock
  )[];
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (number | null) | Media;
    description?: string | null;
  };
  publishedAt?: string | null;
  slug: string;
  tenant: number | Tenant;
  contentHash?: string | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BiographyBlock".
 */
export interface BiographyBlock {
  biography: number | Biography;
  id?: string | null;
  blockName?: string | null;
  blockType: 'biography';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "biographies".
 */
export interface Biography {
  id: number;
  tenant: number | Tenant;
  user?: (number | null) | User;
  name?: string | null;
  photo: number | Media;
  title?: string | null;
  start_date?: string | null;
  biography?: string | null;
  contentHash?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  name: string;
  roles?: {
    docs?: (number | RoleAssignment)[];
    hasNextPage?: boolean;
    totalDocs?: number;
  };
  globalRoleAssignments?: {
    docs?: (number | GlobalRoleAssignment)[];
    hasNextPage?: boolean;
    totalDocs?: number;
  };
  inviteToken?: string | null;
  inviteExpiration?: string | null;
  lastLogin?: string | null;
  contentHash?: string | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "roleAssignments".
 */
export interface RoleAssignment {
  id: number;
  tenant: number | Tenant;
  role?: (number | null) | Role;
  roleName?: string | null;
  user?: (number | null) | User;
  contentHash?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "roles".
 */
export interface Role {
  id: number;
  name: string;
  rules: {
    collections: string[];
    actions: ('*' | 'create' | 'read' | 'update' | 'delete')[];
    id?: string | null;
  }[];
  contentHash?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "globalRoleAssignments".
 */
export interface GlobalRoleAssignment {
  id: number;
  globalRole?: (number | null) | GlobalRole;
  globalRoleName?: string | null;
  user?: (number | null) | User;
  contentHash?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "globalRoles".
 */
export interface GlobalRole {
  id: number;
  name: string;
  rules: {
    collections: string[];
    actions: ('*' | 'create' | 'read' | 'update' | 'delete')[];
    id?: string | null;
  }[];
  contentHash?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentBlock".
 */
export interface ContentBlock {
  backgroundColor: string;
  columns?:
    | {
        richText?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'content';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentWithCalloutBlock".
 */
export interface ContentWithCalloutBlock {
  richText?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  callout?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'contentWithCallout';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FormBlock".
 */
export interface FormBlock {
  form: number | Form;
  enableIntro?: boolean | null;
  introContent?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'formBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms".
 */
export interface Form {
  id: number;
  title: string;
  fields?:
    | (
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            defaultValue?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'checkbox';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'country';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'email';
          }
        | {
            message?: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'message';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'number';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            placeholder?: string | null;
            options?:
              | {
                  label: string;
                  value: string;
                  id?: string | null;
                }[]
              | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'select';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'state';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'text';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'textarea';
          }
      )[]
    | null;
  submitButtonLabel?: string | null;
  /**
   * Choose whether to display an on-page message or redirect to a different page after they submit the form.
   */
  confirmationType?: ('message' | 'redirect') | null;
  confirmationMessage?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  redirect?: {
    url: string;
  };
  /**
   * Send custom emails when the form submits. Use comma separated lists to send the same email to multiple recipients. To reference a value from this form, wrap that field's name with double curly brackets, i.e. {{firstName}}. You can use a wildcard {{*}} to output all data and {{*:table}} to format it as an HTML table in the email.
   */
  emails?:
    | {
        emailTo?: string | null;
        cc?: string | null;
        bcc?: string | null;
        replyTo?: string | null;
        emailFrom?: string | null;
        subject: string;
        /**
         * Enter the message that should be sent in this email.
         */
        message?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        id?: string | null;
      }[]
    | null;
  tenant: number | Tenant;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ImageLinkGrid".
 */
export interface ImageLinkGrid {
  columns?:
    | {
        image: number | Media;
        link?: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: number | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: number | Post;
              } | null);
          url?: string | null;
        };
        caption: string;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'imageLinkGrid';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts".
 */
export interface Post {
  id: number;
  tenant: number | Tenant;
  title: string;
  featuredImage?: (number | null) | Media;
  description?: string | null;
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  authors: (number | Biography)[];
  populatedAuthors?:
    | {
        id?: string | null;
        name?: string | null;
      }[]
    | null;
  publishedAt?: string | null;
  tags?: (number | Tag)[] | null;
  relatedPosts?: (number | Post)[] | null;
  blocksInContent?:
    | {
        blockType?: string | null;
        collection?: string | null;
        blockId?: number | null;
        id?: string | null;
      }[]
    | null;
  slug: string;
  contentHash?: string | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tags".
 */
export interface Tag {
  id: number;
  tenant: number | Tenant;
  title: string;
  slug: string;
  contentHash?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ImageQuote".
 */
export interface ImageQuote {
  backgroundColor: string;
  imageLayout: 'left' | 'right';
  image: number | Media;
  quote: string;
  author: string;
  id?: string | null;
  blockName?: string | null;
  blockType: 'imageQuote';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ImageText".
 */
export interface ImageText {
  backgroundColor: string;
  imageLayout: 'left' | 'right';
  image: number | Media;
  richText: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'imageText';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ImageTextList".
 */
export interface ImageTextList {
  layout: 'above' | 'side' | 'full';
  columns?:
    | {
        image: number | Media;
        title: string;
        richText: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        };
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'imageTextList';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "LinkPreviewBlock".
 */
export interface LinkPreviewBlock {
  backgroundColor: string;
  cards?:
    | {
        image: number | Media;
        title: string;
        text: string;
        button: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: number | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: number | Post;
              } | null);
          url?: string | null;
          label: string;
          /**
           * Choose how the link should be rendered.
           */
          appearance?: ('default' | 'secondary' | 'outline') | null;
        };
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'linkPreview';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MediaBlock".
 */
export interface MediaBlock {
  media: number | Media;
  id?: string | null;
  blockName?: string | null;
  blockType: 'mediaBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TeamBlock".
 */
export interface TeamBlock {
  team: number | Team;
  id?: string | null;
  blockName?: string | null;
  blockType: 'team';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "teams".
 */
export interface Team {
  id: number;
  tenant: number | Tenant;
  name: string;
  members: (number | Biography)[];
  contentHash?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "navigations".
 */
export interface Navigation {
  id: number;
  tenant: number | Tenant;
  forecasts?: {
    /**
     * Dropdown items under Forecasts
     */
    items?:
      | {
          link?: {
            type?: ('internal' | 'external') | null;
            reference?:
              | ({
                  relationTo: 'pages';
                  value: number | Page;
                } | null)
              | ({
                  relationTo: 'posts';
                  value: number | Post;
                } | null);
            url?: string | null;
            label?: string | null;
            newTab?: boolean | null;
          };
          items?:
            | {
                link?: {
                  type?: ('internal' | 'external') | null;
                  reference?:
                    | ({
                        relationTo: 'pages';
                        value: number | Page;
                      } | null)
                    | ({
                        relationTo: 'posts';
                        value: number | Post;
                      } | null);
                  url?: string | null;
                  label?: string | null;
                  newTab?: boolean | null;
                };
                id?: string | null;
              }[]
            | null;
          id?: string | null;
        }[]
      | null;
  };
  observations?: {
    /**
     * Dropdown items under Observations
     */
    items?:
      | {
          link?: {
            type?: ('internal' | 'external') | null;
            reference?:
              | ({
                  relationTo: 'pages';
                  value: number | Page;
                } | null)
              | ({
                  relationTo: 'posts';
                  value: number | Post;
                } | null);
            url?: string | null;
            label?: string | null;
            newTab?: boolean | null;
          };
          items?:
            | {
                link?: {
                  type?: ('internal' | 'external') | null;
                  reference?:
                    | ({
                        relationTo: 'pages';
                        value: number | Page;
                      } | null)
                    | ({
                        relationTo: 'posts';
                        value: number | Post;
                      } | null);
                  url?: string | null;
                  label?: string | null;
                  newTab?: boolean | null;
                };
                id?: string | null;
              }[]
            | null;
          id?: string | null;
        }[]
      | null;
  };
  weather?: {
    /**
     * Dropdown items under Weather
     */
    items?:
      | {
          link?: {
            type?: ('internal' | 'external') | null;
            reference?:
              | ({
                  relationTo: 'pages';
                  value: number | Page;
                } | null)
              | ({
                  relationTo: 'posts';
                  value: number | Post;
                } | null);
            url?: string | null;
            label?: string | null;
            newTab?: boolean | null;
          };
          items?:
            | {
                link?: {
                  type?: ('internal' | 'external') | null;
                  reference?:
                    | ({
                        relationTo: 'pages';
                        value: number | Page;
                      } | null)
                    | ({
                        relationTo: 'posts';
                        value: number | Post;
                      } | null);
                  url?: string | null;
                  label?: string | null;
                  newTab?: boolean | null;
                };
                id?: string | null;
              }[]
            | null;
          id?: string | null;
        }[]
      | null;
  };
  education?: {
    /**
     * Dropdown items under Education
     */
    items?:
      | {
          link?: {
            type?: ('internal' | 'external') | null;
            reference?:
              | ({
                  relationTo: 'pages';
                  value: number | Page;
                } | null)
              | ({
                  relationTo: 'posts';
                  value: number | Post;
                } | null);
            url?: string | null;
            label?: string | null;
            newTab?: boolean | null;
          };
          items?:
            | {
                link?: {
                  type?: ('internal' | 'external') | null;
                  reference?:
                    | ({
                        relationTo: 'pages';
                        value: number | Page;
                      } | null)
                    | ({
                        relationTo: 'posts';
                        value: number | Post;
                      } | null);
                  url?: string | null;
                  label?: string | null;
                  newTab?: boolean | null;
                };
                id?: string | null;
              }[]
            | null;
          id?: string | null;
        }[]
      | null;
  };
  accidents?: {
    /**
     * Dropdown items under Accidents
     */
    items?:
      | {
          link?: {
            type?: ('internal' | 'external') | null;
            reference?:
              | ({
                  relationTo: 'pages';
                  value: number | Page;
                } | null)
              | ({
                  relationTo: 'posts';
                  value: number | Post;
                } | null);
            url?: string | null;
            label?: string | null;
            newTab?: boolean | null;
          };
          items?:
            | {
                link?: {
                  type?: ('internal' | 'external') | null;
                  reference?:
                    | ({
                        relationTo: 'pages';
                        value: number | Page;
                      } | null)
                    | ({
                        relationTo: 'posts';
                        value: number | Post;
                      } | null);
                  url?: string | null;
                  label?: string | null;
                  newTab?: boolean | null;
                };
                id?: string | null;
              }[]
            | null;
          id?: string | null;
        }[]
      | null;
  };
  blog?: {
    /**
     * Dropdown items under Blog
     */
    items?:
      | {
          link?: {
            type?: ('internal' | 'external') | null;
            reference?:
              | ({
                  relationTo: 'pages';
                  value: number | Page;
                } | null)
              | ({
                  relationTo: 'posts';
                  value: number | Post;
                } | null);
            url?: string | null;
            label?: string | null;
            newTab?: boolean | null;
          };
          items?:
            | {
                link?: {
                  type?: ('internal' | 'external') | null;
                  reference?:
                    | ({
                        relationTo: 'pages';
                        value: number | Page;
                      } | null)
                    | ({
                        relationTo: 'posts';
                        value: number | Post;
                      } | null);
                  url?: string | null;
                  label?: string | null;
                  newTab?: boolean | null;
                };
                id?: string | null;
              }[]
            | null;
          id?: string | null;
        }[]
      | null;
  };
  events?: {
    /**
     * Dropdown items under Events
     */
    items?:
      | {
          link?: {
            type?: ('internal' | 'external') | null;
            reference?:
              | ({
                  relationTo: 'pages';
                  value: number | Page;
                } | null)
              | ({
                  relationTo: 'posts';
                  value: number | Post;
                } | null);
            url?: string | null;
            label?: string | null;
            newTab?: boolean | null;
          };
          items?:
            | {
                link?: {
                  type?: ('internal' | 'external') | null;
                  reference?:
                    | ({
                        relationTo: 'pages';
                        value: number | Page;
                      } | null)
                    | ({
                        relationTo: 'posts';
                        value: number | Post;
                      } | null);
                  url?: string | null;
                  label?: string | null;
                  newTab?: boolean | null;
                };
                id?: string | null;
              }[]
            | null;
          id?: string | null;
        }[]
      | null;
  };
  about?: {
    /**
     * Dropdown items under About
     */
    items?:
      | {
          link?: {
            type?: ('internal' | 'external') | null;
            reference?:
              | ({
                  relationTo: 'pages';
                  value: number | Page;
                } | null)
              | ({
                  relationTo: 'posts';
                  value: number | Post;
                } | null);
            url?: string | null;
            label?: string | null;
            newTab?: boolean | null;
          };
          items?:
            | {
                link?: {
                  type?: ('internal' | 'external') | null;
                  reference?:
                    | ({
                        relationTo: 'pages';
                        value: number | Page;
                      } | null)
                    | ({
                        relationTo: 'posts';
                        value: number | Post;
                      } | null);
                  url?: string | null;
                  label?: string | null;
                  newTab?: boolean | null;
                };
                id?: string | null;
              }[]
            | null;
          id?: string | null;
        }[]
      | null;
  };
  support?: {
    /**
     * Dropdown items under Support
     */
    items?:
      | {
          link?: {
            type?: ('internal' | 'external') | null;
            reference?:
              | ({
                  relationTo: 'pages';
                  value: number | Page;
                } | null)
              | ({
                  relationTo: 'posts';
                  value: number | Post;
                } | null);
            url?: string | null;
            label?: string | null;
            newTab?: boolean | null;
          };
          items?:
            | {
                link?: {
                  type?: ('internal' | 'external') | null;
                  reference?:
                    | ({
                        relationTo: 'pages';
                        value: number | Page;
                      } | null)
                    | ({
                        relationTo: 'posts';
                        value: number | Post;
                      } | null);
                  url?: string | null;
                  label?: string | null;
                  newTab?: boolean | null;
                };
                id?: string | null;
              }[]
            | null;
          id?: string | null;
        }[]
      | null;
  };
  donate?: {
    link?: {
      type?: ('internal' | 'external') | null;
      reference?:
        | ({
            relationTo: 'pages';
            value: number | Page;
          } | null)
        | ({
            relationTo: 'posts';
            value: number | Post;
          } | null);
      url?: string | null;
      label?: string | null;
      newTab?: boolean | null;
    };
  };
  contentHash?: string | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "settings".
 */
export interface Setting {
  id: number;
  tenant: number | Tenant;
  /**
   * A short description of your avalanche center. This will be used in meta tags for search engine optimization and display in previews on social media and in messaging apps.
   */
  description?: string | null;
  /**
   * Appears in your website footer.
   */
  address?: string | null;
  /**
   * Optional label for phone in your website footer.
   */
  phoneLabel?: ('phone' | 'office' | 'text' | 'call') | null;
  /**
   * Appears in your website footer.
   */
  phone?: string | null;
  /**
   * Optional label for secondary phone in your website footer.
   */
  phoneSecondaryLabel?: ('phone' | 'office' | 'text' | 'call') | null;
  /**
   * Secondary phone appears in your website footer.
   */
  phoneSecondary?: string | null;
  /**
   * Appears in your website footer.
   */
  email?: string | null;
  /**
   * Should be a square aspect ratio image.
   */
  logo: number | Media;
  /**
   * Should be a compressed, 96x96 pixel, square aspect ratio image. This will be used as the browser tab icon.
   */
  icon: number | Media;
  /**
   * This will be used in the header of your website next to the USFS logo if added.
   */
  banner: number | Media;
  usfsLogo?: (number | null) | Media;
  socialMedia?: {
    instagram?: string | null;
    facebook?: string | null;
    twitter?: string | null;
    linkedin?: string | null;
    youtube?: string | null;
    /**
     * A hashtag for users to mention you on social media platforms. This will appear in the footer if filled out.
     */
    hashtag?: string | null;
  };
  terms?: (number | null) | Page;
  privacy?: (number | null) | Page;
  contentHash?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "homePages".
 */
export interface HomePage {
  id: number;
  tenant: number | Tenant;
  /**
   * If quick links are added they will appear to the right of the home page map on desktop and below the home page map on mobile. These are optional.
   */
  quickLinks?:
    | {
        type?: ('reference' | 'custom') | null;
        newTab?: boolean | null;
        reference?:
          | ({
              relationTo: 'pages';
              value: number | Page;
            } | null)
          | ({
              relationTo: 'posts';
              value: number | Post;
            } | null);
        url?: string | null;
        label: string;
        id?: string | null;
      }[]
    | null;
  highlightedContent: {
    /**
     * This controls whether or not this section is displayed.
     */
    enabled: boolean;
    heading?: string | null;
    backgroundColor: string;
    columns?:
      | {
          richText?: {
            root: {
              type: string;
              children: {
                type: string;
                version: number;
                [k: string]: unknown;
              }[];
              direction: ('ltr' | 'rtl') | null;
              format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
              indent: number;
              version: number;
            };
            [k: string]: unknown;
          } | null;
          id?: string | null;
        }[]
      | null;
  };
  layout: (
    | BiographyBlock
    | ContentBlock
    | ContentWithCalloutBlock
    | FormBlock
    | ImageLinkGrid
    | ImageQuote
    | ImageText
    | ImageTextList
    | LinkPreviewBlock
    | MediaBlock
    | TeamBlock
  )[];
  publishedAt?: string | null;
  contentHash?: string | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects".
 */
export interface Redirect {
  id: number;
  /**
   * You will need to rebuild the website when changing this field.
   */
  from: string;
  to?: {
    type?: ('reference' | 'custom') | null;
    reference?:
      | ({
          relationTo: 'pages';
          value: number | Page;
        } | null)
      | ({
          relationTo: 'posts';
          value: number | Post;
        } | null);
    url?: string | null;
  };
  tenant: number | Tenant;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions".
 */
export interface FormSubmission {
  id: number;
  form: number | Form;
  submissionData?:
    | {
        field: string;
        value: string;
        id?: string | null;
      }[]
    | null;
  tenant: number | Tenant;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'pages';
        value: number | Page;
      } | null)
    | ({
        relationTo: 'posts';
        value: number | Post;
      } | null)
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'tenants';
        value: number | Tenant;
      } | null)
    | ({
        relationTo: 'roles';
        value: number | Role;
      } | null)
    | ({
        relationTo: 'roleAssignments';
        value: number | RoleAssignment;
      } | null)
    | ({
        relationTo: 'globalRoles';
        value: number | GlobalRole;
      } | null)
    | ({
        relationTo: 'globalRoleAssignments';
        value: number | GlobalRoleAssignment;
      } | null)
    | ({
        relationTo: 'navigations';
        value: number | Navigation;
      } | null)
    | ({
        relationTo: 'biographies';
        value: number | Biography;
      } | null)
    | ({
        relationTo: 'teams';
        value: number | Team;
      } | null)
    | ({
        relationTo: 'settings';
        value: number | Setting;
      } | null)
    | ({
        relationTo: 'tags';
        value: number | Tag;
      } | null)
    | ({
        relationTo: 'homePages';
        value: number | HomePage;
      } | null)
    | ({
        relationTo: 'redirects';
        value: number | Redirect;
      } | null)
    | ({
        relationTo: 'forms';
        value: number | Form;
      } | null)
    | ({
        relationTo: 'form-submissions';
        value: number | FormSubmission;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  tenant?: T;
  alt?: T;
  caption?: T;
  contentHash?: T;
  blurDataUrl?: T;
  prefix?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        thumbnail?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        square?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        small?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        medium?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        large?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        xlarge?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        og?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  title?: T;
  layout?:
    | T
    | {
        biography?: T | BiographyBlockSelect<T>;
        content?: T | ContentBlockSelect<T>;
        contentWithCallout?: T | ContentWithCalloutBlockSelect<T>;
        formBlock?: T | FormBlockSelect<T>;
        imageLinkGrid?: T | ImageLinkGridSelect<T>;
        imageQuote?: T | ImageQuoteSelect<T>;
        imageText?: T | ImageTextSelect<T>;
        imageTextList?: T | ImageTextListSelect<T>;
        linkPreview?: T | LinkPreviewBlockSelect<T>;
        mediaBlock?: T | MediaBlockSelect<T>;
        team?: T | TeamBlockSelect<T>;
      };
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  slug?: T;
  tenant?: T;
  contentHash?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BiographyBlock_select".
 */
export interface BiographyBlockSelect<T extends boolean = true> {
  biography?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentBlock_select".
 */
export interface ContentBlockSelect<T extends boolean = true> {
  backgroundColor?: T;
  columns?:
    | T
    | {
        richText?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentWithCalloutBlock_select".
 */
export interface ContentWithCalloutBlockSelect<T extends boolean = true> {
  richText?: T;
  callout?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FormBlock_select".
 */
export interface FormBlockSelect<T extends boolean = true> {
  form?: T;
  enableIntro?: T;
  introContent?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ImageLinkGrid_select".
 */
export interface ImageLinkGridSelect<T extends boolean = true> {
  columns?:
    | T
    | {
        image?: T;
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
            };
        caption?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ImageQuote_select".
 */
export interface ImageQuoteSelect<T extends boolean = true> {
  backgroundColor?: T;
  imageLayout?: T;
  image?: T;
  quote?: T;
  author?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ImageText_select".
 */
export interface ImageTextSelect<T extends boolean = true> {
  backgroundColor?: T;
  imageLayout?: T;
  image?: T;
  richText?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ImageTextList_select".
 */
export interface ImageTextListSelect<T extends boolean = true> {
  layout?: T;
  columns?:
    | T
    | {
        image?: T;
        title?: T;
        richText?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "LinkPreviewBlock_select".
 */
export interface LinkPreviewBlockSelect<T extends boolean = true> {
  backgroundColor?: T;
  cards?:
    | T
    | {
        image?: T;
        title?: T;
        text?: T;
        button?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
              appearance?: T;
            };
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MediaBlock_select".
 */
export interface MediaBlockSelect<T extends boolean = true> {
  media?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TeamBlock_select".
 */
export interface TeamBlockSelect<T extends boolean = true> {
  team?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts_select".
 */
export interface PostsSelect<T extends boolean = true> {
  tenant?: T;
  title?: T;
  featuredImage?: T;
  description?: T;
  content?: T;
  authors?: T;
  populatedAuthors?:
    | T
    | {
        id?: T;
        name?: T;
      };
  publishedAt?: T;
  tags?: T;
  relatedPosts?: T;
  blocksInContent?:
    | T
    | {
        blockType?: T;
        collection?: T;
        blockId?: T;
        id?: T;
      };
  slug?: T;
  contentHash?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  name?: T;
  roles?: T;
  globalRoleAssignments?: T;
  inviteToken?: T;
  inviteExpiration?: T;
  lastLogin?: T;
  contentHash?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tenants_select".
 */
export interface TenantsSelect<T extends boolean = true> {
  name?: T;
  customDomain?: T;
  slug?: T;
  contentHash?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "roles_select".
 */
export interface RolesSelect<T extends boolean = true> {
  name?: T;
  rules?:
    | T
    | {
        collections?: T;
        actions?: T;
        id?: T;
      };
  contentHash?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "roleAssignments_select".
 */
export interface RoleAssignmentsSelect<T extends boolean = true> {
  tenant?: T;
  role?: T;
  roleName?: T;
  user?: T;
  contentHash?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "globalRoles_select".
 */
export interface GlobalRolesSelect<T extends boolean = true> {
  name?: T;
  rules?:
    | T
    | {
        collections?: T;
        actions?: T;
        id?: T;
      };
  contentHash?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "globalRoleAssignments_select".
 */
export interface GlobalRoleAssignmentsSelect<T extends boolean = true> {
  globalRole?: T;
  globalRoleName?: T;
  user?: T;
  contentHash?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "navigations_select".
 */
export interface NavigationsSelect<T extends boolean = true> {
  tenant?: T;
  forecasts?:
    | T
    | {
        items?:
          | T
          | {
              link?:
                | T
                | {
                    type?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    newTab?: T;
                  };
              items?:
                | T
                | {
                    link?:
                      | T
                      | {
                          type?: T;
                          reference?: T;
                          url?: T;
                          label?: T;
                          newTab?: T;
                        };
                    id?: T;
                  };
              id?: T;
            };
      };
  observations?:
    | T
    | {
        items?:
          | T
          | {
              link?:
                | T
                | {
                    type?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    newTab?: T;
                  };
              items?:
                | T
                | {
                    link?:
                      | T
                      | {
                          type?: T;
                          reference?: T;
                          url?: T;
                          label?: T;
                          newTab?: T;
                        };
                    id?: T;
                  };
              id?: T;
            };
      };
  weather?:
    | T
    | {
        items?:
          | T
          | {
              link?:
                | T
                | {
                    type?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    newTab?: T;
                  };
              items?:
                | T
                | {
                    link?:
                      | T
                      | {
                          type?: T;
                          reference?: T;
                          url?: T;
                          label?: T;
                          newTab?: T;
                        };
                    id?: T;
                  };
              id?: T;
            };
      };
  education?:
    | T
    | {
        items?:
          | T
          | {
              link?:
                | T
                | {
                    type?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    newTab?: T;
                  };
              items?:
                | T
                | {
                    link?:
                      | T
                      | {
                          type?: T;
                          reference?: T;
                          url?: T;
                          label?: T;
                          newTab?: T;
                        };
                    id?: T;
                  };
              id?: T;
            };
      };
  accidents?:
    | T
    | {
        items?:
          | T
          | {
              link?:
                | T
                | {
                    type?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    newTab?: T;
                  };
              items?:
                | T
                | {
                    link?:
                      | T
                      | {
                          type?: T;
                          reference?: T;
                          url?: T;
                          label?: T;
                          newTab?: T;
                        };
                    id?: T;
                  };
              id?: T;
            };
      };
  blog?:
    | T
    | {
        items?:
          | T
          | {
              link?:
                | T
                | {
                    type?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    newTab?: T;
                  };
              items?:
                | T
                | {
                    link?:
                      | T
                      | {
                          type?: T;
                          reference?: T;
                          url?: T;
                          label?: T;
                          newTab?: T;
                        };
                    id?: T;
                  };
              id?: T;
            };
      };
  events?:
    | T
    | {
        items?:
          | T
          | {
              link?:
                | T
                | {
                    type?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    newTab?: T;
                  };
              items?:
                | T
                | {
                    link?:
                      | T
                      | {
                          type?: T;
                          reference?: T;
                          url?: T;
                          label?: T;
                          newTab?: T;
                        };
                    id?: T;
                  };
              id?: T;
            };
      };
  about?:
    | T
    | {
        items?:
          | T
          | {
              link?:
                | T
                | {
                    type?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    newTab?: T;
                  };
              items?:
                | T
                | {
                    link?:
                      | T
                      | {
                          type?: T;
                          reference?: T;
                          url?: T;
                          label?: T;
                          newTab?: T;
                        };
                    id?: T;
                  };
              id?: T;
            };
      };
  support?:
    | T
    | {
        items?:
          | T
          | {
              link?:
                | T
                | {
                    type?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    newTab?: T;
                  };
              items?:
                | T
                | {
                    link?:
                      | T
                      | {
                          type?: T;
                          reference?: T;
                          url?: T;
                          label?: T;
                          newTab?: T;
                        };
                    id?: T;
                  };
              id?: T;
            };
      };
  donate?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              reference?: T;
              url?: T;
              label?: T;
              newTab?: T;
            };
      };
  contentHash?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "biographies_select".
 */
export interface BiographiesSelect<T extends boolean = true> {
  tenant?: T;
  user?: T;
  name?: T;
  photo?: T;
  title?: T;
  start_date?: T;
  biography?: T;
  contentHash?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "teams_select".
 */
export interface TeamsSelect<T extends boolean = true> {
  tenant?: T;
  name?: T;
  members?: T;
  contentHash?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "settings_select".
 */
export interface SettingsSelect<T extends boolean = true> {
  tenant?: T;
  description?: T;
  address?: T;
  phoneLabel?: T;
  phone?: T;
  phoneSecondaryLabel?: T;
  phoneSecondary?: T;
  email?: T;
  logo?: T;
  icon?: T;
  banner?: T;
  usfsLogo?: T;
  socialMedia?:
    | T
    | {
        instagram?: T;
        facebook?: T;
        twitter?: T;
        linkedin?: T;
        youtube?: T;
        hashtag?: T;
      };
  terms?: T;
  privacy?: T;
  contentHash?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tags_select".
 */
export interface TagsSelect<T extends boolean = true> {
  tenant?: T;
  title?: T;
  slug?: T;
  contentHash?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "homePages_select".
 */
export interface HomePagesSelect<T extends boolean = true> {
  tenant?: T;
  quickLinks?:
    | T
    | {
        type?: T;
        newTab?: T;
        reference?: T;
        url?: T;
        label?: T;
        id?: T;
      };
  highlightedContent?:
    | T
    | {
        enabled?: T;
        heading?: T;
        backgroundColor?: T;
        columns?:
          | T
          | {
              richText?: T;
              id?: T;
            };
      };
  layout?:
    | T
    | {
        biography?: T | BiographyBlockSelect<T>;
        content?: T | ContentBlockSelect<T>;
        contentWithCallout?: T | ContentWithCalloutBlockSelect<T>;
        formBlock?: T | FormBlockSelect<T>;
        imageLinkGrid?: T | ImageLinkGridSelect<T>;
        imageQuote?: T | ImageQuoteSelect<T>;
        imageText?: T | ImageTextSelect<T>;
        imageTextList?: T | ImageTextListSelect<T>;
        linkPreview?: T | LinkPreviewBlockSelect<T>;
        mediaBlock?: T | MediaBlockSelect<T>;
        team?: T | TeamBlockSelect<T>;
      };
  publishedAt?: T;
  contentHash?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects_select".
 */
export interface RedirectsSelect<T extends boolean = true> {
  from?: T;
  to?:
    | T
    | {
        type?: T;
        reference?: T;
        url?: T;
      };
  tenant?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms_select".
 */
export interface FormsSelect<T extends boolean = true> {
  title?: T;
  fields?:
    | T
    | {
        checkbox?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              defaultValue?: T;
              id?: T;
              blockName?: T;
            };
        country?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        email?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        message?:
          | T
          | {
              message?: T;
              id?: T;
              blockName?: T;
            };
        number?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        select?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              placeholder?: T;
              options?:
                | T
                | {
                    label?: T;
                    value?: T;
                    id?: T;
                  };
              required?: T;
              id?: T;
              blockName?: T;
            };
        state?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        text?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        textarea?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
      };
  submitButtonLabel?: T;
  confirmationType?: T;
  confirmationMessage?: T;
  redirect?:
    | T
    | {
        url?: T;
      };
  emails?:
    | T
    | {
        emailTo?: T;
        cc?: T;
        bcc?: T;
        replyTo?: T;
        emailFrom?: T;
        subject?: T;
        message?: T;
        id?: T;
      };
  tenant?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions_select".
 */
export interface FormSubmissionsSelect<T extends boolean = true> {
  form?: T;
  submissionData?:
    | T
    | {
        field?: T;
        value?: T;
        id?: T;
      };
  tenant?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * Controls the loading of NAC widgets across all avalanche center websites.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "nacWidgetsConfig".
 */
export interface NacWidgetsConfig {
  id: number;
  version: string;
  baseUrl: string;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * Displays diagnostic data about the current environment.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "diagnostics".
 */
export interface Diagnostic {
  id: number;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "nacWidgetsConfig_select".
 */
export interface NacWidgetsConfigSelect<T extends boolean = true> {
  version?: T;
  baseUrl?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "diagnostics_select".
 */
export interface DiagnosticsSelect<T extends boolean = true> {
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ButtonsBlock".
 */
export interface ButtonsBlock {
  buttons: {
    button: {
      type?: ('reference' | 'custom') | null;
      newTab?: boolean | null;
      reference?:
        | ({
            relationTo: 'pages';
            value: number | Page;
          } | null)
        | ({
            relationTo: 'posts';
            value: number | Post;
          } | null);
      url?: string | null;
      label: string;
      /**
       * Choose how the link should be rendered.
       */
      appearance?: ('default' | 'secondary' | 'destructive' | 'ghost' | 'link' | 'outline') | null;
    };
    id?: string | null;
  }[];
  id?: string | null;
  blockName?: string | null;
  blockType: 'buttonsBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BannerBlock".
 */
export interface BannerBlock {
  style: 'info' | 'warning' | 'error' | 'success';
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'banner';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}