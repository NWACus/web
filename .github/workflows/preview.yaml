name: preview
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
on:
  pull_request:
    types:
      - opened
      - synchronize
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Install Turso CLI
        run: curl -sSfL https://get.tur.so/install.sh | bash
        env:
          TURSO_INSTALL_SKIP_SIGNUP: 'true'
      - name: Create a new database for the preview
        id: database
        run: |
          head_ref="${{ github.head_ref }}"
          ref="${head_ref//[^a-z0-9\-]/x}"
          # Truncate ref to a prefix + hash suffix to avoid collisions while maintaining readability
          # and ensuring total database name stays within 58 character limit
          # "payloadcms-preview-" is 19 characters, leaving 39 for the ref
          if [ ${#ref} -gt 39 ]; then
            prefix="${ref:0:31}"
            hash=$(echo -n "${ref}" | sha256sum | cut -c1-7)
            ref="${prefix}-${hash}"
          fi
          echo "ref=${ref}" >> "${GITHUB_OUTPUT}"

          name="payloadcms-preview-${ref}"
          /home/runner/.turso/turso org switch nwac
          if /home/runner/.turso/turso db show "${name}"; then
            /home/runner/.turso/turso db destroy "${name}" --yes
          fi
          /home/runner/.turso/turso db create "${name}" --wait
          /home/runner/.turso/turso db shell "${name}" .tables
          echo "name=${name}" >> "${GITHUB_OUTPUT}"
        env:
          TURSO_API_TOKEN: ${{ secrets.TURSO_API_TOKEN }}
      - name: Record database connection URI and token
        id: connection
        run: |
          echo "uri=$(/home/runner/.turso/turso db show "${{ steps.database.outputs.name }}" --url)" >> "${GITHUB_OUTPUT}"
          echo "token=$(/home/runner/.turso/turso db tokens create "${{ steps.database.outputs.name }}")" >> "${GITHUB_OUTPUT}"
        env:
          TURSO_API_TOKEN: ${{ secrets.TURSO_API_TOKEN }}
      - name: 🏗 Setup repo
        uses: actions/checkout@v4
      - name: 🏗 Setup pnpm
        uses: pnpm/action-setup@v4
      - name: 🏗 Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: pnpm
      - name: 📦 Install dependencies
        run: pnpm ii
        shell: bash
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - name: Generate preview domain names
        id: domains
        run: |
          PREVIEW_ALIAS="${{ steps.database.outputs.ref }}.preview.avy-fx.org"
          WILDCARD_PREVIEW_ALIAS="*.${{ steps.database.outputs.ref }}.preview.avy-fx.org"

          echo "preview_alias=${PREVIEW_ALIAS}" >> "${GITHUB_OUTPUT}"
          echo "wildcard_preview_alias=${WILDCARD_PREVIEW_ALIAS}" >> "${GITHUB_OUTPUT}"

          echo "Preview alias: $PREVIEW_ALIAS"
          echo "Wildcard preview alias: $WILDCARD_PREVIEW_ALIAS"
      - name: Update database URI in Vercel
        run: echo -n "${{ steps.connection.outputs.uri }}" | vercel env add DATABASE_URI preview ${{ github.head_ref }} --force --token=${{ secrets.VERCEL_TOKEN }}
      - name: Update database token in Vercel
        run: echo -n "${{ steps.connection.outputs.token }}" | vercel env add DATABASE_AUTH_TOKEN preview ${{ github.head_ref }} --sensitive --force --token=${{ secrets.VERCEL_TOKEN }}
      - name: Update bootstrap password in Vercel
        run: echo -n "${{ secrets.PAYLOAD_SEED_PASSWORD }}" | vercel env add PAYLOAD_SEED_PASSWORD preview ${{ github.head_ref }} --sensitive --force --token=${{ secrets.VERCEL_TOKEN }}
      - name: Update server domain in Vercel
        run: echo -n "${{ steps.domains.outputs.preview_alias }}" | vercel env add NEXT_PUBLIC_ROOT_DOMAIN preview ${{ github.head_ref }} --force --token=${{ secrets.VERCEL_TOKEN }}
      - name: Pull Vercel Environment Variables into .env file
        run: vercel env pull --yes --environment=preview --git-branch="${{ github.head_ref }}" --token=${{ secrets.VERCEL_TOKEN }} .env
      - name: Seed the database
        run: pnpm seed:standalone
        env:
          DATABASE_AUTH_TOKEN: '${{ steps.connection.outputs.token }}'
          PAYLOAD_SEED_PASSWORD: '${{ secrets.PAYLOAD_SEED_PASSWORD }}'
          PAYLOAD_SECRET: '${{ secrets.PAYLOAD_SECRET }}'
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --git-branch="${{ github.head_ref }}" --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts
        run: vercel build --yes --target=preview --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy Project Artifacts to Vercel
        id: deployment
        run: |
          fullName="${{ github.repository }}"
          DEPLOYMENT_URL=$(vercel deploy --yes --prebuilt --target=preview \
            --meta='githubCommitAuthorName=${{ github.event.pull_request.user.login }}' \
            --meta='githubCommitOrg=${{ github.repository_owner }}' \
            --meta='githubCommitRef=${{ github.head_ref }}' \
            --meta="githubCommitRepo=${fullName##*/}" \
            --meta='githubCommitSha=${{ github.sha }}' \
            --meta='githubDeployment=1' \
            --meta='githubOrg=${{ github.repository_owner }}' \
            --meta="githubRepo=${fullName##*/}" \
            --meta='githubCommitAuthorLogin=${{ github.event.pull_request.user.login }}' \
            --token=${{ secrets.VERCEL_TOKEN }})

          echo "url=${DEPLOYMENT_URL}" >> "${GITHUB_OUTPUT}"
          echo "Deployment URL: ${DEPLOYMENT_URL}"
      - name: Create aliases for the deployment
        id: aliases
        run: |
          echo "Setting preview alias: ${{ steps.domains.outputs.preview_alias }}"
          vercel alias --scope=nwac --token=${{ secrets.VERCEL_TOKEN }} set "${{ steps.deployment.outputs.url }}" "${{ steps.domains.outputs.preview_alias }}"

          echo "Setting wildcard preview alias: ${{ steps.domains.outputs.wildcard_preview_alias }}"
          vercel alias --scope=nwac --token=${{ secrets.VERCEL_TOKEN }} set "${{ steps.deployment.outputs.url }}" "${{ steps.domains.outputs.wildcard_preview_alias }}"
      - name: Find existing deployment comment
        id: find-comment
        uses: peter-evans/find-comment@v2
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: 'Preview deployment:'
      - name: Create or update PR comment
        uses: peter-evans/create-or-update-comment@v3
        with:
          comment-id: ${{ steps.find-comment.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            Preview deployment: https://${{ steps.domains.outputs.preview_alias }}
          edit-mode: replace
