name: CI
on:
  merge_group: {}
  pull_request:
    branches:
      - main

defaults:
  run:
    shell: bash

jobs:
  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - name: 🏗 Setup repo
        uses: actions/checkout@v4
      - name: 🏗 Setup pnpm
        uses: pnpm/action-setup@v4
      - name: 🏗 Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: pnpm
      - name: 📦 Install dependencies
        run: pnpm ii
        shell: bash
      - name: 🧹 Run lint
        run: pnpm lint

  build:
    name: build
    runs-on: ubuntu-latest
    steps:
      - name: 🏗 Setup repo
        uses: actions/checkout@v4
      - name: 🏗 Setup pnpm
        uses: pnpm/action-setup@v4
      - name: 🏗 Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: pnpm
      - name: 📦 Install dependencies
        run: pnpm ii
        shell: bash
      - name: 📦 Opt out of image optimization
        run: "sed -i 's/unoptimized: false/unoptimized: true/' next.config.js"
        shell: bash
      - name: 🧹 Run build
        run: |
          function cleanup() {
            for job in $( jobs -p ); do
              kill -SIGTERM "${job}"
              wait "${job}"
            done
          }
          trap cleanup EXIT

          cp dev.db.initialized dev.db
          pnpm dev &
          for (( i = 0; i < 10; i++ )); do
            if ! curl -s http://localhost:3000; then
              echo "Dev server not yet started, waiting..."
              sleep 1
            else
              break
            fi
          done
          curl -s -H 'Content-Type: application/json' -H 'Accept: application/json' -X POST http://localhost:3000/api/users/login --data '{"email":"bootstrap@avy.com","password":"test"}' > login.json
          curl -v -H "Authorization: Bearer $( jq --raw-output .token <login.json )' -X POST http://localhost:3000/next/seed
          cleanup
          pnpm build
        shell: bash
        env:
          DATABASE_URI: 'file:./dev.db'
          PAYLOAD_SECRET: ${{ secrets.PAYLOAD_SECRET }}
          GOOGLE_MAPS_API_KEY: ${{ secrets.GOOGLE_MAPS_API_KEY }}

  prettier:
    name: prettier
    runs-on: ubuntu-latest
    steps:
      - name: 🏗 Setup repo
        uses: actions/checkout@v4
      - name: 🏗 Setup pnpm
        uses: pnpm/action-setup@v4
      - name: 🏗 Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: pnpm
      - name: 📦 Install dependencies
        run: pnpm ii
        shell: bash
      - name: 🧹 Run prettier
        run: if ! pnpm prettier --check .; then echo "⚠️  Run 'pnpm prettify' to fix prettier errors & commit the result"; exit 1; fi
